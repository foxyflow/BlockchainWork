import { ethers } from 'ethers'
import { useEffect, useState } from 'react'
import axios from 'axios'
import Web3Modal from "web3modal"
import web3 from 'web3'
import styles from '../styles/Home.module.css'
import Image from 'next/image' //Betty Boop pic in app.css
import Head from 'next/head'
import {
nftaddress, nftmarketaddress
} from '../config'

import NFT from "../artifacts/contracts/NFT.sol/NFT.json"
import Market from "../artifacts/contracts/NFTMarket.sol/NFTMarket.json"



export default function Home() {
  const [nfts, setNfts] = useState([])
  const [loadingState, setLoadingState] = useState('not-loaded')

  useEffect(() =>{
    loadNFTs()
  }, [] )

  async function loadNFTs(){
    //paste in: "https://rpc-mumbai.matic.today" or //"https://polygon-mumbai.infura.io/v3/7356d542f5a14006b1cb5da26f0513bd" //replace "https://ropsten.infura.io/v3/7356d542f5a14006b1cb5da26f0513bd"
    const provider = new ethers.providers.JsonRpcProvider("https://ropsten.infura.io/v3/7356d542f5a14006b1cb5da26f0513bd") //remember " "LEAVE EMPTY FOR LOCALHOST IE const provider = new ethers.providers.JsonRpcProvider()
    
    const tokenContract = new ethers.Contract(nftaddress, NFT.abi, provider)
    const marketContract = new ethers.Contract(nftmarketaddress, Market.abi, provider) 
    const data = await marketContract.fetchMarketItems()

    const items = await Promise.all(data.map(async i => {
      const tokenUri = await tokenContract.tokenURI(i.tokenId)
      const meta = await axios.get(tokenUri)
      let price = ethers.utils.formatUnits(i.price.toString(), 'ether') //different to docs https://bestofreactjs.com/repo/dabit3-full-stack-ethereum-marketplace-workshop-react-react-apps#fetchmarketitems 
      let item = {
        price,
        tokenId: i.tokenId.toNumber(),
        seller: i.seller,
        owner: i.owner,
        image: meta.data.image,
        name: meta.data.name,
        description: meta.data.description
      }
      return item
    }))
    
    console.log('items: ',items)
    setNfts(items)
    setLoadingState('loaded')
  }

  async function buyNft(nft){
    const web3Modal = new Web3Modal()
    const connection = await web3Modal.connect()
    const provider = new ethers.providers.Web3Provider(connection)

    const signer = provider.getSigner()
    let contract = new ethers.Contract(nftmarketaddress, Market.abi, signer) 

    const price = ethers.utils.parseUnits(nft.price.toString(), 'ether')

    const transaction = await contract.createMarketSale(nftaddress, nft.tokenId,{
      value: price
    })
    await transaction.wait()
    loadNFTs()
  }

  if(loadingState === 'loaded' && !nfts.length)
    return (<h1 className="px-20 py-10 text-3xl">Currently No items in the Marketplace.</h1>)


  return ( 
  <div>
    <div className="flex justify-center">
      <div className="px-4" style={{ maxWidth: '1600px' }}>
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 pt-4">
          {
            nfts.map((nft, i) =>(
              <div key={i} className="boarder shadow rounded-xl overflow-hidden">
                <img src={nft.image} />
                <div className="p-4">
                  <p style={{ height: '64px' }} className="text-2xl font-semibold">{nft.name}</p>
                  <div style={{ height: '70px', overflow: 'hidden' }}>
                    <p className="text-gray-400">{nft.description}</p>
                  </div>
                </div>
              <div className="p-4 bg-black">
                <p className="text-2xl mb-4 font-bold text-white">{nft.price} Matic</p>
                <button className="w-full bg-pink-500 text-white font-bold py-2 px-12 rounded"
                  onClick={() => buyNft(nft)}>Buy</button>
                  </div>  
              </div>
            ))
          }
        </div>
      </div> 
    </div>
    <div className={styles.container}>
    <Head>
      <title>Create an NFT</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>

<main className={styles.main}>

<h1 className={styles.title}>
Welcome to <a href="https://nextjs.org">NFT_Flash's </a>Marketplace
</h1>

<p className={styles.description}>
Get started by choosing an NFT you like -- Instructions to connect to Metamask {' '}
<code className={styles.code}> ... </code>
</p>

<div className={styles.grid}>
<a href="https://nextjs.org/docs" className={styles.card}>
<h2>Documentation &rarr;</h2>
<p>Find in-depth information about NFT_Flash features and API.</p>
</a>

<a href="https://nextjs.org/learn" className={styles.card}>
<h2>Learn &rarr;</h2>
<p>Learn about NFT_Flash in an interactive course with quizzes!</p>
</a>

<a
href="https://github.com/vercel/next.js/tree/canary/examples"
className={styles.card}
>
<h2>Examples &rarr;</h2>
<p>Discover the future of NFT projects.</p>
</a>

<a
href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
className={styles.card}
>
<h2>Deploy &rarr;</h2>
<p>
We Instantly deploy our site in real time to a public URL with Vercel.
</p>
</a>
</div>

</main>

    <footer className={styles.footer}>
<a
href="https://Lukeslanguagelearning.academy"
target="_blank"
rel="noopener noreferrer"
>
Powered by{' '}<a> Lukeslanguagelearning&copy;2022</a>
<span className={styles.logo}>
<Image src="/vercel.svg" alt="Lukes Language learning Logo" width={72} height={16} />
</span>
</a>
</footer>
</div>
  <div className="flex justify-center">
        <div className="px-4" style={{ maxWidth: '1600px' }}>
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 pt-4">
            {
              nfts.map((nft, i) =>(
                <div key={i} className="boarder shadow rounded-xl overflow-hidden">
                  <img src={nft.image} />
                  <div className="p-4">
                    <p style={{ height: '64px' }} className="text-2xl font-semibold">{nft.name}</p>
                    <div style={{ height: '70px', overflow: 'hidden' }}>
                      <p className="text-gray-400">{nft.description}</p>
                    </div>
                  </div>
                <div className="p-4 bg-black">
                  <p className="text-2xl mb-4 font-bold text-white">{nft.price} Matic</p>
                  <button className="w-full bg-pink-500 text-white font-bold py-2 px-12 rounded"
                    onClick={() => buyNft(nft)}>Buy</button>
                    </div>  
                </div>
              ))
            }
          </div>
        </div> 
      </div>
  </div>
  )
}
